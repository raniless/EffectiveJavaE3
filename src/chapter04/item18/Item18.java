package chapter04.item18;

//상속보다는 컴포지션을 사용하라
public class Item18 {
    /*
     - 여기서 상속은 클래스간 상속을 의미
     - 상위클래스가 어떻게 구현되느냐에 따라 하위 클래스의 동작에 이상이 생길 수 있다.
     - 메서드 재정의에 따른 문제가 발생할 소지가 있다.
     - 해결 방안 : 기존 클래스를 확장하는 대신, 새로운 클래스를 만들고 private 필드로 기존 클래스의 인스턴스를 참조
                 (Composition : 구성, 기존 클래스가 새로운 클래스의 구성요소로 쓰인다는 뜻)
     - 상속을 사용하기로 결정하기 전 마지막으로 자문해야 할 질문
      1) 확장하려는 클래스의 API에 아무런 결함이 없는가?
      2) 결함이 있다면, 이 결함이 여러분 클래스의 API까지 전파돼도 괜찮은가?

     - 상속의 취약점을 피하려면 상속 대신 컴포지션과 전달을 사용하자.
       특히 래퍼 클래스로 구현할 적당한 인터페이스가 있다면 더욱 그렇다. 래퍼 클래스는 하위 클래스보다 견고하고 강력하다.
     */
}
